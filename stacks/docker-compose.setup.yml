version: '3.5'

services:
  keystore:
    build:
      context: ./../services/devops/logging/elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    command: bash /setup/setup-keystore.sh
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME:-elastic}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME:-logging}
      ELASTIC_NODE_NAME: ${ELASTIC_NODE_NAME:-logging-node-0}
      ELASTIC_INIT_MASTER_NODE: ${ELASTIC_INIT_MASTER_NODE:-logging-node-0}
      ELASTIC_DISCOVERY_SEEDS: ${ELASTIC_DISCOVERY_SEEDS:-logging-node-0}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-9200}
      ES_JAVA_OPTS: "-Xmx${ELASTICSEARCH_HEAP:-512m} -Xms${ELASTICSEARCH_HEAP:-512m} -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true"
      bootstrap.memory_lock: "true"
    user: "0"
    volumes:
      - ./../services/devops/logging/secrets:/secrets
      - ./../services/devops/logging/setup:/setup

  certs:
    build:
      context: ./../services/devops/logging/elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-8.11.1}
    command: bash /setup/setup-certs.sh
    user: "0"
    volumes:
      - ./../services/devops/logging/secrets:/secrets
      - ./../services/devops/logging/setup:/setup
      - ./../services/devops/logging/setup/instances.yml:/setup/instances.yml
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME:-elastic}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME:-logging}
      ELASTIC_NODE_NAME: ${ELASTIC_NODE_NAME:-logging-node-0}
      ELASTIC_INIT_MASTER_NODE: ${ELASTIC_INIT_MASTER_NODE:-logging-node-0}
      ELASTIC_DISCOVERY_SEEDS: ${ELASTIC_DISCOVERY_SEEDS:-logging-node-0}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-9200}
      ES_JAVA_OPTS: "-Xmx${ELASTICSEARCH_HEAP:-512m} -Xms${ELASTICSEARCH_HEAP:-512m} -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true"
      bootstrap.memory_lock: "true"
  
  bundle-frontend:
    build:
      context: ./../services/frontend/
      dockerfile: Dockerfile
    command: npm run build
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - UV_THREADPOOL_SIZE=128

      - VITE_USER_SERVICE_HOST=https://ft-transcendence.com
      - VITE_CHAT_SERVICE_HOST=https://ft-transcendence.com
      - VITE_WS_CHAT_SERVICE_HOST=wss://ft-transcendence.com
      - VITE_WS_GAME_SERVICE_HOST=wss://ft-transcendence.com
      - VITE_USER_SERVICE_PORT=443
      - VITE_GAME_SERVICE_HOST=https://ft-transcendence.com
      - VITE_GAME_SERVICE_PORT=443

      # - VITE_USER_SERVICE_HOST=http://localhost
      # - VITE_WS_CHAT_SERVICE_HOST=ws://localhost
      # - VITE_CHAT_SERVICE_HOST=http://localhost
      # - VITE_USER_SERVICE_PORT=80

    volumes:
      - ./../services/frontend/dist:/app/dist

volumes:
  bundle-dist:
    driver: local

