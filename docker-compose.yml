version: '3.8'

services:
  game-service:
    build:
      context: ./services/game-service
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL:-file:./sqlite.db}
    restart: unless-stopped
    image: game-service
    pull_policy: build
    environment:
      # - DATABASE_URL=file:./sqlite.db
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-regex-33}
      - REDIS_PORT=${REDIS_PORT:-6379}
    ports:
      - "9000:3000"
    volumes:
      - ./services/game-service/src:/game-service/src
    networks:
      - transcendence-network
    container_name: game-service
    profiles: ["game-service", "backend", "dev"]

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: transcendence-frontend
    restart: unless-stopped
    volumes:
      - ./services/frontend:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - UV_THREADPOOL_SIZE=128

      - VITE_USER_SERVICE_HOST=http://localhost
      - VITE_USER_SERVICE_PORT=80
      - VITE_WS_USER_SERVICE_HOST=ws://localhost:8001
      - VITE_WS_CHAT_SERVICE_HOST=ws://localhost
      - VITE_CHAT_SERVICE_HOST=http://localhost

      # - VITE_WS_USER_SERVICE_HOST=wss://ft-transcendence.com
      # - VITE_WS_CHAT_SERVICE_HOST=wss://ft-transcendence.com
      # - VITE_USER_SERVICE_HOST=https://ft-transcendence.com
      # - VITE_CHAT_SERVICE_HOST=https://ft-transcendence.com
      # - VITE_USER_SERVICE_PORT=443
    command: sh -c "npm install && npm run dev"
    networks:
      - transcendence-network
    profiles: ["frontend", "dev"]

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: transcendence-user-service
    ports:
      - "${USER_SERVICE_PORT:-8001}:${USER_SERVICE_PORT:-8001}"
    networks:
      - transcendence-network
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${USER_SERVICE_PORT:-8001}
      - HOME_PAGE=${HOME_PAGE:-/home}
      - DB_DIALECT=${DB_DIALECT:-sqlite}
      - DB_STORAGE=${DB_STORAGE:-./database.sqlite}

      - JWT_SECRET=${JWT_SECRET}
      - TIME_TOKEN_EXPIRATION=${TIME_TOKEN_EXPIRATION:-3600}

      - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-http://localhost/api/oauth/intra/callback}
      # - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-https://ft-transcendence.com/api/oauth/intra/callback}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - INTRA_CLIENT_ID=${INTRA_CLIENT_ID}
      - INTRA_CLIENT_SECRET=${INTRA_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - GMAIL_APP_EMAIL=${GMAIL_APP_EMAIL}
      - TIME_BTWN_REQUESTS=${TIME_BTWN_REQUESTS:-1000}
      - NUMBER_OF_REQUESTS_TO_BAN=${NUMBER_OF_REQUESTS_TO_BAN:-10}
      - CLEANUP_INTERVAL=${CLEANUP_INTERVAL:-300000}
    depends_on:
      - redis
    profiles: ["user-service", "backend", "dev"]
    restart: always

  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    container_name: transcendence-chat-service
    ports:
      - "${CHAT_SERVICE_PORT:-8002}:${CHAT_SERVICE_PORT:-8002}"
    networks:
      - transcendence-network
    volumes:
      - ./services/chat-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${CHAT_SERVICE_PORT:-8002}
      - JWT_SECRET=${JWT_SECRET} 
      - SQLITE=file:${DB_STORAGE:-./database.sqlite}
      - USER_SERVICE_URL=http://user-service:${USER_SERVICE_PORT:-8001}
    depends_on:
      - user-service
    profiles: ["chat-service", "backend", "dev"]
    restart: unless-stopped

  # Nginx as Reverse Proxy
  nginx:
    build: ./services/devops/nginx
    container_name: transcendence-nginx
    ports:
      - "80:80"
    depends_on:
      - user-service
      - chat-service
      - xo-game
      - frontend
    networks:
      - transcendence-network
    # volumes:
    #   - ./services/frontend/dist:/usr/share/nginx/html:ro
    profiles: ["nginx", "dev"]
    restart: unless-stopped


  redis:
    build:
      context: ./services/devops/databases/redis
      dockerfile: Dockerfile
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_logs:/var/log/redis
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - transcendence-network
      # - elk-network
    profiles: ["database", "dev"]
  xo-game:
    build:
      context: ./services/xo-game
      dockerfile: Dockerfile
    container_name: transcendence-xo-game
    restart: unless-stopped
    ports:
      - "${XO_GAME_PORT:-8083}:${XO_GAME_PORT:-8083}"
    networks:
      - transcendence-network
    volumes:
      - ./services/xo-game:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${USER_SERVICE_PORT:-8001}
      - JWT_SECRET=${JWT_SECRET}
      - TIME_TOKEN_EXPIRATION=${TIME_TOKEN_EXPIRATION:-3600}
      - HOME_PAGE=${HOME_PAGE:-/home}
      - DB_DIALECT=${DB_DIALECT:-sqlite}
      - DB_STORAGE=${DB_STORAGE:-./database.sqlite}
volumes:
  ## DATABASES
  redis_data:
    driver: local
  redis_logs:
    driver: local

networks:
  transcendence-network:
    driver: bridge
