version: '3.8'
services:
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: transcendence-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./services/frontend:/app
      # - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - UV_THREADPOOL_SIZE=128
      - VITE_USER_SERVICE_HOST=localhost
      - VITE_USER_SERVICE_PORT=80
      # - VITE_USER_SERVICE_PORT=8080
      

      # - REACT_APP_API_URL=http://localhost:${NGINX_PORT:-8080}/api
    command: sh -c "npm install && npm run dev"
    depends_on:
      - nginx
    networks:
      - transcendence-network
    profiles: ["frontend", "dev"]

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: transcendence-user-service
    ports:
      - "${USER_SERVICE_PORT:-8001}:${USER_SERVICE_PORT:-8001}"
    networks:
      - transcendence-network
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${USER_SERVICE_PORT:-8001}
      - JWT_SECRET=${JWT_SECRET}
      - TIME_TOKEN_EXPIRATION=${TIME_TOKEN_EXPIRATION:-3600}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-http://localhost/api/oauth/intra/callback}
      # - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-http://localhost:8080/api/oauth/intra/callback}
      - HOME_PAGE=${HOME_PAGE:-/home}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DIALECT=${DB_DIALECT:-postgres}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - INTRA_CLIENT_ID=${INTRA_CLIENT_ID}
      - INTRA_CLIENT_SECRET=${INTRA_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - GMAIL_APP_EMAIL=${GMAIL_APP_EMAIL}
      - TIME_BTWN_REQUESTS=${TIME_BTWN_REQUESTS:-1000}
      - NUMBER_OF_REQUESTS_TO_BAN=${NUMBER_OF_REQUESTS_TO_BAN:-10}
      - CLEANUP_INTERVAL=${CLEANUP_INTERVAL:-300000}
    depends_on:
      - postgres
      - redis
    profiles: ["user-service", "backend", "dev"]
    restart: always

  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    container_name: transcendence-chat-service
    ports:
      - "${CHAT_SERVICE_PORT:-8002}:${CHAT_SERVICE_PORT:-8002}"
    networks:
      - transcendence-network
    volumes:
      - ./services/chat-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${CHAT_SERVICE_PORT:-8002}
      - JWT_SECRET=${JWT_SECRET} 
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=chat
      - USER_SERVICE_URL=http://user-service:${USER_SERVICE_PORT:-8001}
    depends_on:
      - postgres
      - user-service
    profiles: ["chat-service", "backend", "dev"]
    restart: unless-stopped

  # Nginx as Reverse Proxy
  nginx:
    build: ./services/devops/nginx
    container_name: transcendence-nginx
    ports:
      - "80:80"
    depends_on:
      - user-service
      - chat-service
      - xo-game
    networks:
      - transcendence-network
    # volumes:
      # - ./services/devops/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      # don't forget logs for elk
      # - ./services/devops/nginx/conf.d:/etc/nginx/conf.d
    profiles: ["nginx", "dev"]
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    build:
      context: ./services/devops/databases/postgres
      dockerfile: Dockerfile
    container_name: transcendence-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_USER=aghlimi
      # - POSTGRES_PASSWORD=1234POSTGRES_USER
      # - POSTGRES_DB=db
    volumes:
      - postgresql_logs:/var/log/postgresql
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - transcendence-network
      # - elk-network
    profiles: ["database", "dev"]

  redis:
    build:
      context: ./services/devops/databases/redis
      dockerfile: Dockerfile
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_logs:/var/log/redis
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - transcendence-network
      # - elk-network
    profiles: ["database", "dev"]
  xo-game:
    build:
      context: ./services/xo-game
      dockerfile: Dockerfile
    container_name: transcendence-xo-game
    restart: unless-stopped
    ports:
      - "${XO_GAME_PORT:-8083}:${XO_GAME_PORT:-8083}"
    networks:
      - transcendence-network
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${USER_SERVICE_PORT:-8001}
      - JWT_SECRET=${JWT_SECRET}
      - TIME_TOKEN_EXPIRATION=${TIME_TOKEN_EXPIRATION:-3600}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-http://localhost/api/oauth/intra/callback}
      # - INTRA_CALLBACK_URL=${INTRA_CALLBACK_URL:-http://localhost:8080/api/oauth/intra/callback}
      - HOME_PAGE=${HOME_PAGE:-/home}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DIALECT=${DB_DIALECT:-postgres}
volumes:
  ## DATABASES
  redis_data:
    driver: local
  redis_logs:
    driver: local
  postgresql_logs:
    driver: local
  postgresql_data:
    driver: local

networks:
  transcendence-network:
    driver: bridge
